<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-10T16:49:56.111Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js数组小技巧笔记</title>
    <link href="http://yoursite.com/2019/12/07/js1/"/>
    <id>http://yoursite.com/2019/12/07/js1/</id>
    <published>2019-12-07T07:46:53.000Z</published>
    <updated>2019-12-10T16:49:56.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js数组小技巧笔记"><a href="#js数组小技巧笔记" class="headerlink" title="js数组小技巧笔记"></a>js数组小技巧笔记</h2><h4 id="1-删除数组的重复项"><a href="#1-删除数组的重复项" class="headerlink" title="1. 删除数组的重复项"></a>1. 删除数组的重复项</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="string">"banna"</span>,<span class="string">"apple"</span>,<span class="string">"orange"</span>,<span class="string">"watermelon"</span>,<span class="string">"apple"</span>,<span class="string">"orange"</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式一</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> uniqueArr = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(uniqueArr); <span class="comment">//["banna", "apple", "orange", "watermelon"]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式二</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> uniqueArr2 =[...new <span class="built_in">Set</span>(arr)];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(uniqueArr2)</span></pre></td></tr></table></figure><h4 id="2-Map-和Set的区别"><a href="#2-Map-和Set的区别" class="headerlink" title="2. Map 和Set的区别"></a>2. Map 和Set的区别</h4><h5 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h5><p><code>Map</code>是一组键值对的结构，具有极快的查找速度。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>(); <span class="comment">// 空Map</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">m.set(<span class="string">'Adam'</span>, <span class="number">67</span>); <span class="comment">// 添加新的key-value</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">m.set(<span class="string">'Bob'</span>, <span class="number">59</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">m.has(<span class="string">'Adam'</span>); <span class="comment">// 是否存在key 'Adam': true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">m.get(<span class="string">'Adam'</span>); <span class="comment">// 67</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">m.delete(<span class="string">'Adam'</span>); <span class="comment">// 删除key 'Adam'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">m.get(<span class="string">'Adam'</span>); <span class="comment">// undefined</span></span></pre></td></tr></table></figure><p>由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m = <span class="keyword">new</span> <span class="built_in">Map</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">m.set(<span class="string">'Adam'</span>, <span class="number">67</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">m.set(<span class="string">'Adam'</span>, <span class="number">88</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">m.get(<span class="string">'Adam'</span>); <span class="comment">// 88</span></span></pre></td></tr></table></figure><h5 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h5><p><code>Set</code>和<code>Map</code>类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在<code>Set</code>中，没有重复的key。</p><p>要创建一个<code>Set</code>，需要提供一个<code>Array</code>作为输入，或者直接创建一个空<code>Set</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s1 = <span class="keyword">new</span> <span class="built_in">Set</span>(); <span class="comment">// 空Set</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s2 = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]); <span class="comment">// 含1, 2, 3</span></span></pre></td></tr></table></figure><p>重复元素在<code>Set</code>中自动被过滤：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="string">'3'</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">s; <span class="comment">// Set &#123;1, 2, 3, "3"&#125;</span></span></pre></td></tr></table></figure><p>通过<code>delete(key)</code>方法可以删除元素：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">s; <span class="comment">// Set &#123;1, 2, 3&#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">s.delete(<span class="number">3</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">s; <span class="comment">// Set &#123;1, 2&#125;</span></span></pre></td></tr></table></figure><h4 id="3-替换数组中的特定值"><a href="#3-替换数组中的特定值" class="headerlink" title="3. 替换数组中的特定值"></a>3. 替换数组中的特定值</h4><p><code>.splice(start、value to remove、valueToAdd)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">'value1'</span>, <span class="string">'value2'</span>, <span class="string">'value3'</span>,<span class="string">'value4'</span>, <span class="string">'value5'</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">arr.splice(<span class="number">0</span>, <span class="number">2</span>, <span class="string">'replace1'</span>, <span class="string">'replace2'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr); <span class="comment">//["replace1", "replace2", "value3", "value4", "value5"]</span></span></pre></td></tr></table></figure><h4 id="4-Array-from-达到-map-的效果"><a href="#4-Array-from-达到-map-的效果" class="headerlink" title="4. Array.from 达到 .map 的效果"></a>4. Array.from 达到 .map 的效果</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrObj=[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小名'</span>, <span class="attr">age</span>: <span class="number">12</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小红'</span>, <span class="attr">age</span>: <span class="number">14</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小蓝'</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小六'</span>, <span class="attr">age</span>: <span class="number">19</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小七'</span>, <span class="attr">age</span>: <span class="number">10</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> names = <span class="built_in">Array</span>.from(arrObj, (&#123;name&#125;) =&gt; name); <span class="comment">// 第二个参数表示每一项&#123;name&#125;表示每一项中的name</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(names);<span class="comment">// ["小名", "小红", "小蓝", "小六", "小七"]</span></span></pre></td></tr></table></figure><blockquote><p>Array.from()方法就是将一个类数组对象或者可遍历对象转换成一个真正的数组。</p><p>要将一个类数组对象转换为一个真正的数组，必须具备以下条件：</p><p>1、该类数组对象必须具有length属性，用于指定数组的长度。如果没有length属性，那么转换后的数组是一个空数组。</p><p>2、该类数组对象的属性名必须为数值型或字符串型的数字</p></blockquote><h5 id="Array-from"><a href="#Array-from" class="headerlink" title="Array.from"></a>Array.from</h5><p>1、将类数组对象转换为真正数组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arrayLike = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="number">0</span>: <span class="string">'tom'</span>, </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="number">1</span>: <span class="string">'65'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="number">2</span>: <span class="string">'男'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="number">3</span>: [<span class="string">'jane'</span>,<span class="string">'john'</span>,<span class="string">'Mary'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="string">'length'</span>: <span class="number">4</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = <span class="built_in">Array</span>.from(arrayLike)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arr) <span class="comment">// ['tom','65','男',['jane','john','Mary']]</span></span></pre></td></tr></table></figure><p>2、将Set结构的数据转换为真正的数组：　</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">12</span>,<span class="number">45</span>,<span class="number">97</span>,<span class="number">9797</span>,<span class="number">564</span>,<span class="number">134</span>,<span class="number">45642</span>]</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set(arr)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">console.log(Array.from(<span class="keyword">set</span>)) // [ 12, 45, 97, 9797, 564, 134, 45642 ]</span></pre></td></tr></table></figure><p>3、将字符串转换为数组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">'hello world!'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(str)) <span class="comment">// ["h", "e", "l", "l", "o", " ", "w", "o", "r", "l", "d", "!"]</span></span></pre></td></tr></table></figure><h4 id="5-置空数组"><a href="#5-置空数组" class="headerlink" title="5. 置空数组"></a>5. 置空数组</h4><p>直接让数组的 <code>length</code> 属性为 <code>0</code>，就可以清空数组了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arrObj=[</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小名'</span>, <span class="attr">age</span>: <span class="number">12</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小红'</span>, <span class="attr">age</span>: <span class="number">14</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小蓝'</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小六'</span>, <span class="attr">age</span>: <span class="number">19</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  &#123;<span class="attr">name</span>: <span class="string">'小七'</span>, <span class="attr">age</span>: <span class="number">10</span>&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">arrObj.length = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(arrObj) <span class="comment">// []</span></span></pre></td></tr></table></figure><h4 id="6-将数组转换为对象"><a href="#6-将数组转换为对象" class="headerlink" title="6. 将数组转换为对象"></a>6. 将数组转换为对象</h4><p>使用展开运算符号(<code>...</code>)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> catNamesArray = [<span class="string">"Jacqueline"</span>, <span class="string">"Sophia"</span>, <span class="string">"Autumn"</span>]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> catNamesObj = &#123;...catNamesArray&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(catNamesObj) <span class="comment">// &#123;0: "Jacqueline", 1: "Sophia", 2: "Autumn"&#125;</span></span></pre></td></tr></table></figure><h4 id="7-用数据填充数组"><a href="#7-用数据填充数组" class="headerlink" title="7. 用数据填充数组"></a>7. 用数据填充数组</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> newArr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">10</span>).fill(<span class="string">'1'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(newArr); <span class="comment">// ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1"]</span></span></pre></td></tr></table></figure><h4 id="8-数组合并"><a href="#8-数组合并" class="headerlink" title="8. 数组合并"></a>8. 数组合并</h4><p>使用展开操作符，也可以将多个数组合并起来。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> catNamesArray = [<span class="string">"Jacqueline"</span>, <span class="string">"Sophia"</span>, <span class="string">"Autumn"</span>]; </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myArray = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log([...catNamesArray, ...myArray])<span class="comment">// ["Jacqueline", "Sophia", "Autumn", 1, 2, 3, 4]</span></span></pre></td></tr></table></figure><h4 id="9-求两个数组的交集"><a href="#9-求两个数组的交集" class="headerlink" title="9. 求两个数组的交集"></a>9. 求两个数组的交集</h4><p>求两个数组的交集在面试中也是有一定难度的正点，为了找到两个数组的交集，首先使用上面的方法确保所检查数组中的值不重复，接着使用<code>.filter</code> 方法和<code>.includes</code>方法。如下所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numOne = [<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numTwo = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">5</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> duplicatedValues = [...new <span class="built_in">Set</span>(numOne)].filter(<span class="function"><span class="params">item</span> =&gt;</span> numTwo.includes(item))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(duplicatedValues);<span class="comment">// [2, 5, 7]</span></span></pre></td></tr></table></figure><h4 id="10-从数组中删除虚值"><a href="#10-从数组中删除虚值" class="headerlink" title="10. 从数组中删除虚值"></a>10. 从数组中删除虚值</h4><p>在 JS 中，虚值有 <code>false</code>, <code>0</code>，<code>&#39;&#39;</code>， <code>null</code>, <code>NaN</code>, <code>undefined</code>。咱们可以 <code>.filter()</code> 方法来过滤这些虚值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mixedArr = [<span class="number">0</span>, <span class="string">'blue'</span>, <span class="string">''</span>, <span class="literal">NaN</span>, <span class="number">9</span>, <span class="literal">true</span>, <span class="literal">undefined</span>, <span class="string">'white'</span>, <span class="literal">false</span>];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> trueArr = mixedArr.filter(<span class="built_in">Boolean</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(trueArr);<span class="comment">// ["blue", 9, true, "white"]</span></span></pre></td></tr></table></figure><h4 id="11-从数组中获取随机值"><a href="#11-从数组中获取随机值" class="headerlink" title="11. 从数组中获取随机值"></a>11. 从数组中获取随机值</h4><p>有时我们需要从数组中随机选择一个值。一种方便的方法是可以根据数组长度获得一个随机索引，如下所示：</p><h4 id="12-对数组中的所有值求和"><a href="#12-对数组中的所有值求和" class="headerlink" title="12. 对数组中的所有值求和"></a>12. 对数组中的所有值求和</h4><p>JS 面试中也经常用 <code>reduce</code> 方法来巧妙的解决问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var nums &#x3D; [1,5,2,6];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">var sum &#x3D; nums.reduce((x, y) &#x3D;&gt; x+y);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">console.log(sum)&#x2F;&#x2F; 14</span></pre></td></tr></table></figure><p>参考网站：</p><p><a href="https://zhuanlan.zhihu.com/p/94387373" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/94387373</a></p><p><a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023024181109440" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1022910821149312/1023024181109440</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;js数组小技巧笔记&quot;&gt;&lt;a href=&quot;#js数组小技巧笔记&quot; class=&quot;headerlink&quot; title=&quot;js数组小技巧笔记&quot;&gt;&lt;/a&gt;js数组小技巧笔记&lt;/h2&gt;&lt;h4 id=&quot;1-删除数组的重复项&quot;&gt;&lt;a href=&quot;#1-删除数组的重复项&quot; cla
      
    
    </summary>
    
    
      <category term="js基础" scheme="http://yoursite.com/categories/js%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/12/06/hello-world/"/>
    <id>http://yoursite.com/2019/12/06/hello-world/</id>
    <published>2019-12-06T15:27:48.158Z</published>
    <updated>2019-12-06T15:27:48.159Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
