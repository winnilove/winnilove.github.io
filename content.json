{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://yoursite.com","root":"/"},"pages":[{"title":"js数组小技巧","date":"2019-12-10T16:07:11.000Z","updated":"2019-12-10T16:28:32.609Z","comments":true,"path":"archives/js2.html","permalink":"http://yoursite.com/archives/js2.html","excerpt":"","text":"js数组小技巧笔记1. 删除数组的重复项1let arr = [\"banna\",\"apple\",\"orange\",\"watermelon\",\"apple\",\"orange\"];2// 方式一3let uniqueArr = Array.from(new Set(arr));4console.log(uniqueArr); //[\"banna\", \"apple\", \"orange\", \"watermelon\"]56//方式二7let uniqueArr2 =[...new Set(arr)];8console.log(uniqueArr2) 2. Map 和Set的区别MapMap是一组键值对的结构，具有极快的查找速度。 1var m = new Map(); // 空Map2m.set('Adam', 67); // 添加新的key-value3m.set('Bob', 59);4m.has('Adam'); // 是否存在key 'Adam': true5m.get('Adam'); // 676m.delete('Adam'); // 删除key 'Adam'7m.get('Adam'); // undefined 由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉： 1var m = new Map();2m.set('Adam', 67);3m.set('Adam', 88);4m.get('Adam'); // 88 SetSet和Map类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在Set中，没有重复的key。 要创建一个Set，需要提供一个Array作为输入，或者直接创建一个空Set： 1var s1 = new Set(); // 空Set2var s2 = new Set([1, 2, 3]); // 含1, 2, 3 重复元素在Set中自动被过滤： 1var s = new Set([1, 2, 3, 3, '3']);2s; // Set &#123;1, 2, 3, \"3\"&#125; 通过delete(key)方法可以删除元素： 1var s = new Set([1, 2, 3]);2s; // Set &#123;1, 2, 3&#125;3s.delete(3);4s; // Set &#123;1, 2&#125; 3. 替换数组中的特定值.splice(start、value to remove、valueToAdd) 1var arr = ['value1', 'value2', 'value3','value4', 'value5'];2arr.splice(0, 2, 'replace1', 'replace2');3console.log(arr); //[\"replace1\", \"replace2\", \"value3\", \"value4\", \"value5\"] 4. Array.from 达到 .map 的效果1var arrObj=[2 &#123;name: '小名', age: 12&#125;,3 &#123;name: '小红', age: 14&#125;,4 &#123;name: '小蓝', age: 18&#125;,5 &#123;name: '小六', age: 19&#125;,6 &#123;name: '小七', age: 10&#125;,7]8var names = Array.from(arrObj, (&#123;name&#125;) =&gt; name); // 第二个参数表示每一项&#123;name&#125;表示每一项中的name9console.log(names);// [\"小名\", \"小红\", \"小蓝\", \"小六\", \"小七\"] Array.from()方法就是将一个类数组对象或者可遍历对象转换成一个真正的数组。 要将一个类数组对象转换为一个真正的数组，必须具备以下条件： 1、该类数组对象必须具有length属性，用于指定数组的长度。如果没有length属性，那么转换后的数组是一个空数组。 2、该类数组对象的属性名必须为数值型或字符串型的数字 Array.from1、将类数组对象转换为真正数组： 1let arrayLike = &#123;2 0: 'tom', 3 1: '65',4 2: '男',5 3: ['jane','john','Mary'],6 'length': 47&#125;8let arr = Array.from(arrayLike)9console.log(arr) // ['tom','65','男',['jane','john','Mary']] 2、将Set结构的数据转换为真正的数组： 1let arr = [12,45,97,9797,564,134,45642]2let set = new Set(arr)3console.log(Array.from(set)) // [ 12, 45, 97, 9797, 564, 134, 45642 ] 3、将字符串转换为数组： 1let str = 'hello world!';2console.log(Array.from(str)) // [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\", \"!\"] 5. 置空数组直接让数组的 length 属性为 0，就可以清空数组了。 1var arrObj=[2 &#123;name: '小名', age: 12&#125;,3 &#123;name: '小红', age: 14&#125;,4 &#123;name: '小蓝', age: 18&#125;,5 &#123;name: '小六', age: 19&#125;,6 &#123;name: '小七', age: 10&#125;,7];8arrObj.length = 0;9console.log(arrObj) // [] 6. 将数组转换为对象使用展开运算符号(...) 1var catNamesArray = [\"Jacqueline\", \"Sophia\", \"Autumn\"]; 2var catNamesObj = &#123;...catNamesArray&#125;3console.log(catNamesObj) // &#123;0: \"Jacqueline\", 1: \"Sophia\", 2: \"Autumn\"&#125; 7. 用数据填充数组1var newArr = new Array(10).fill('1')2console.log(newArr); // [\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"] 8. 数组合并使用展开操作符，也可以将多个数组合并起来。 1var catNamesArray = [\"Jacqueline\", \"Sophia\", \"Autumn\"]; 2var myArray = [1, 2, 3, 4];3console.log([...catNamesArray, ...myArray])// [\"Jacqueline\", \"Sophia\", \"Autumn\", 1, 2, 3, 4] 9. 求两个数组的交集求两个数组的交集在面试中也是有一定难度的正点，为了找到两个数组的交集，首先使用上面的方法确保所检查数组中的值不重复，接着使用.filter 方法和.includes方法。如下所示： 1var numOne = [0,2,3,4,5,6,7];2var numTwo = [1,2,9,7,8,5,5];3var duplicatedValues = [...new Set(numOne)].filter(item =&gt; numTwo.includes(item))4console.log(duplicatedValues);// [2, 5, 7] 10. 从数组中删除虚值在 JS 中，虚值有 false, 0，&#39;&#39;， null, NaN, undefined。咱们可以 .filter() 方法来过滤这些虚值。 1var mixedArr = [0, 'blue', '', NaN, 9, true, undefined, 'white', false];2var trueArr = mixedArr.filter(Boolean);3console.log(trueArr);// [\"blue\", 9, true, \"white\"] 11. 从数组中获取随机值有时我们需要从数组中随机选择一个值。一种方便的方法是可以根据数组长度获得一个随机索引，如下所示： 12. 对数组中的所有值求和JS 面试中也经常用 reduce 方法来巧妙的解决问题 1var nums &#x3D; [1,5,2,6];2var sum &#x3D; nums.reduce((x, y) &#x3D;&gt; x+y);3console.log(sum)&#x2F;&#x2F; 14 参考网站： https://zhuanlan.zhihu.com/p/94387373 https://www.liaoxuefeng.com/wiki/1022910821149312/1023024181109440"}],"posts":[{"title":"js数组小技巧笔记","slug":"js1","date":"2019-12-07T07:46:53.000Z","updated":"2019-12-10T16:49:56.111Z","comments":true,"path":"2019/12/07/js1/","link":"","permalink":"http://yoursite.com/2019/12/07/js1/","excerpt":"","text":"js数组小技巧笔记1. 删除数组的重复项1let arr = [\"banna\",\"apple\",\"orange\",\"watermelon\",\"apple\",\"orange\"];2// 方式一3let uniqueArr = Array.from(new Set(arr));4console.log(uniqueArr); //[\"banna\", \"apple\", \"orange\", \"watermelon\"]56//方式二7let uniqueArr2 =[...new Set(arr)];8console.log(uniqueArr2) 2. Map 和Set的区别MapMap是一组键值对的结构，具有极快的查找速度。 1var m = new Map(); // 空Map2m.set('Adam', 67); // 添加新的key-value3m.set('Bob', 59);4m.has('Adam'); // 是否存在key 'Adam': true5m.get('Adam'); // 676m.delete('Adam'); // 删除key 'Adam'7m.get('Adam'); // undefined 由于一个key只能对应一个value，所以，多次对一个key放入value，后面的值会把前面的值冲掉： 1var m = new Map();2m.set('Adam', 67);3m.set('Adam', 88);4m.get('Adam'); // 88 SetSet和Map类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在Set中，没有重复的key。 要创建一个Set，需要提供一个Array作为输入，或者直接创建一个空Set： 1var s1 = new Set(); // 空Set2var s2 = new Set([1, 2, 3]); // 含1, 2, 3 重复元素在Set中自动被过滤： 1var s = new Set([1, 2, 3, 3, '3']);2s; // Set &#123;1, 2, 3, \"3\"&#125; 通过delete(key)方法可以删除元素： 1var s = new Set([1, 2, 3]);2s; // Set &#123;1, 2, 3&#125;3s.delete(3);4s; // Set &#123;1, 2&#125; 3. 替换数组中的特定值.splice(start、value to remove、valueToAdd) 1var arr = ['value1', 'value2', 'value3','value4', 'value5'];2arr.splice(0, 2, 'replace1', 'replace2');3console.log(arr); //[\"replace1\", \"replace2\", \"value3\", \"value4\", \"value5\"] 4. Array.from 达到 .map 的效果1var arrObj=[2 &#123;name: '小名', age: 12&#125;,3 &#123;name: '小红', age: 14&#125;,4 &#123;name: '小蓝', age: 18&#125;,5 &#123;name: '小六', age: 19&#125;,6 &#123;name: '小七', age: 10&#125;,7]8var names = Array.from(arrObj, (&#123;name&#125;) =&gt; name); // 第二个参数表示每一项&#123;name&#125;表示每一项中的name9console.log(names);// [\"小名\", \"小红\", \"小蓝\", \"小六\", \"小七\"] Array.from()方法就是将一个类数组对象或者可遍历对象转换成一个真正的数组。 要将一个类数组对象转换为一个真正的数组，必须具备以下条件： 1、该类数组对象必须具有length属性，用于指定数组的长度。如果没有length属性，那么转换后的数组是一个空数组。 2、该类数组对象的属性名必须为数值型或字符串型的数字 Array.from1、将类数组对象转换为真正数组： 1let arrayLike = &#123;2 0: 'tom', 3 1: '65',4 2: '男',5 3: ['jane','john','Mary'],6 'length': 47&#125;8let arr = Array.from(arrayLike)9console.log(arr) // ['tom','65','男',['jane','john','Mary']] 2、将Set结构的数据转换为真正的数组： 1let arr = [12,45,97,9797,564,134,45642]2let set = new Set(arr)3console.log(Array.from(set)) // [ 12, 45, 97, 9797, 564, 134, 45642 ] 3、将字符串转换为数组： 1let str = 'hello world!';2console.log(Array.from(str)) // [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\", \"!\"] 5. 置空数组直接让数组的 length 属性为 0，就可以清空数组了。 1var arrObj=[2 &#123;name: '小名', age: 12&#125;,3 &#123;name: '小红', age: 14&#125;,4 &#123;name: '小蓝', age: 18&#125;,5 &#123;name: '小六', age: 19&#125;,6 &#123;name: '小七', age: 10&#125;,7];8arrObj.length = 0;9console.log(arrObj) // [] 6. 将数组转换为对象使用展开运算符号(...) 1var catNamesArray = [\"Jacqueline\", \"Sophia\", \"Autumn\"]; 2var catNamesObj = &#123;...catNamesArray&#125;3console.log(catNamesObj) // &#123;0: \"Jacqueline\", 1: \"Sophia\", 2: \"Autumn\"&#125; 7. 用数据填充数组1var newArr = new Array(10).fill('1')2console.log(newArr); // [\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"] 8. 数组合并使用展开操作符，也可以将多个数组合并起来。 1var catNamesArray = [\"Jacqueline\", \"Sophia\", \"Autumn\"]; 2var myArray = [1, 2, 3, 4];3console.log([...catNamesArray, ...myArray])// [\"Jacqueline\", \"Sophia\", \"Autumn\", 1, 2, 3, 4] 9. 求两个数组的交集求两个数组的交集在面试中也是有一定难度的正点，为了找到两个数组的交集，首先使用上面的方法确保所检查数组中的值不重复，接着使用.filter 方法和.includes方法。如下所示： 1var numOne = [0,2,3,4,5,6,7];2var numTwo = [1,2,9,7,8,5,5];3var duplicatedValues = [...new Set(numOne)].filter(item =&gt; numTwo.includes(item))4console.log(duplicatedValues);// [2, 5, 7] 10. 从数组中删除虚值在 JS 中，虚值有 false, 0，&#39;&#39;， null, NaN, undefined。咱们可以 .filter() 方法来过滤这些虚值。 1var mixedArr = [0, 'blue', '', NaN, 9, true, undefined, 'white', false];2var trueArr = mixedArr.filter(Boolean);3console.log(trueArr);// [\"blue\", 9, true, \"white\"] 11. 从数组中获取随机值有时我们需要从数组中随机选择一个值。一种方便的方法是可以根据数组长度获得一个随机索引，如下所示： 12. 对数组中的所有值求和JS 面试中也经常用 reduce 方法来巧妙的解决问题 1var nums &#x3D; [1,5,2,6];2var sum &#x3D; nums.reduce((x, y) &#x3D;&gt; x+y);3console.log(sum)&#x2F;&#x2F; 14 参考网站： https://zhuanlan.zhihu.com/p/94387373 https://www.liaoxuefeng.com/wiki/1022910821149312/1023024181109440","categories":[{"name":"js基础","slug":"js基础","permalink":"http://yoursite.com/categories/js%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"js","slug":"js","permalink":"http://yoursite.com/tags/js/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-12-06T15:27:48.158Z","updated":"2019-12-06T15:27:48.159Z","comments":true,"path":"2019/12/06/hello-world/","link":"","permalink":"http://yoursite.com/2019/12/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}